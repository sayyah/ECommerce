<Project Sdk="Microsoft.NET.Sdk.Web">

	<PropertyGroup>
		<TargetFramework>net8.0</TargetFramework>
		<Nullable>enable</Nullable>
		<ImplicitUsings>enable</ImplicitUsings>
		<SatelliteResourceLanguages>en</SatelliteResourceLanguages>
	</PropertyGroup>

<<<<<<< HEAD
=======
	<ItemGroup>
		<Using Include="Microsoft.AspNetCore.Mvc" />
		<Using Include="Microsoft.AspNetCore.Mvc.RazorPages" />
		<Using Include="ECommerce.Domain.Interfaces" />
		<Using Include="ECommerce.Application.ViewModels" />
		<Using Include="ECommerce.Domain.Entities" />
		<Using Include="ECommerce.Domain.Entities.Helper" />
	</ItemGroup>
>>>>>>> 94b9a029 (Fixed #565 ddd layers and dot net 8)
	<ItemGroup>
		<Using Include="Microsoft.AspNetCore.Mvc" />
		<Using Include="Microsoft.AspNetCore.Mvc.RazorPages" />
		<Using Include="ECommerce.Domain.Interfaces" />
		<Using Include="ECommerce.Application.ViewModels" />
		<Using Include="ECommerce.Domain.Entities" />
		<Using Include="ECommerce.Domain.Entities.Helper" />
	</ItemGroup>
	<ItemGroup>
		<PackageReference Include="DotNetEnv" Version="2.5.0" />
		<PackageReference Include="Haukcode.WkHtmlToPdfDotNet" Version="1.5.86" />
<<<<<<< HEAD
		<PackageReference Include="Microsoft.AspNetCore.Mvc.Razor.RuntimeCompilation" Version="8.0.0" />
=======
		<PackageReference Include="Microsoft.AspNetCore.Mvc.Razor.RuntimeCompilation" Version="7.0.13" />
>>>>>>> 94b9a029 (Fixed #565 ddd layers and dot net 8)
		<PackageReference Include="Microsoft.AspNetCore.Mvc.ViewFeatures" Version="2.2.0" />
		<PackageReference Include="PersianDate" Version="3.5.5" />
		<PackageReference Include="PersianDateTimePicker" Version="1.0.1.1" />
		<PackageReference Include="RazorEngineCore" Version="2023.11.2" />
		<PackageReference Include="ZarinpalSandbox" Version="2.0.4" />
	</ItemGroup>

	<ItemGroup>
		<ProjectReference Include="..\ECommerce.Domain.Interfaces\ECommerce.Domain.Interfaces.csproj" />
		<ProjectReference Include="..\ECommerce.Services\ECommerce.Services.csproj" />
		<ProjectReference Include="..\ECommerce.Front.Admin\ECommerce.Front.Admin.csproj" />
	</ItemGroup>
	<ItemGroup>
		<UpToDateCheckInput Remove="Pages\Components\CategoriesMenu\Default.cshtml" />
	</ItemGroup>

	<ItemGroup>
		<Content Update="wwwroot\css\Shop.css">
			<ExcludeFromSingleFile>true</ExcludeFromSingleFile>
			<CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
		</Content>
	</ItemGroup>

	<ItemGroup>
		<UpToDateCheckInput Remove="Pages\Components\CategoriesMobile\Default.cshtml" />
	</ItemGroup>

	<ItemGroup>
		<UpToDateCheckInput Remove="Pages\Components\Username\Default.cshtml" />
	</ItemGroup>

	<!--
      1. Install npm packages
      "Inputs" and "Outputs" are used for incremental builds. If all output items are up-to-date, MSBuild
	skips the target.
      The first time the task is executed. Then, it only runs when you change the package.json file.
      Documentation:
	https://learn.microsoft.com/en-us/visualstudio/msbuild/incremental-builds?WT.mc_id=DT-MVP-5003978
   -->
	<Target Name="NpmInstall" Inputs="package.json" Outputs="node_modules/.install-stamp">
		<!--
        Use npm install or npm ci depending on RestorePackagesWithLockFile value.
        Uncomment the following lines if you want to use this feature:

        <PropertyGroup>
          <RestorePackagesWithLockFile>true</RestorePackagesWithLockFile>
        </PropertyGroup>
     -->
		<Exec Command="npm ci" Condition="'$(RestorePackagesWithLockFile)' == 'true'" />
		<Exec Command="npm install" Condition="'$(RestorePackagesWithLockFile)' != 'true'" />

		<!-- Write the stamp file, so incremental builds work -->
		<Touch Files="node_modules/.install-stamp" AlwaysCreate="true" />
	</Target>

	<!--
      2. Run npm run build before building the .NET project.
      MSBuild runs NpmInstall before this task because of the DependsOnTargets attribute.
   -->
	<Target Name="NpmRunBuild" DependsOnTargets="NpmInstall" BeforeTargets="BeforeBuild">
		<Exec Command="npm run build" />
	</Target>

</Project>